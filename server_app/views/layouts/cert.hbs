<img id = "cert_img" src="data:image/jpeg;base64, {{cert_image}}" alt="Red dot" />
<p> <b>Contract Address:</b> <id = "contract_address">{{contract_address}}</id></p>
<p> <b>Student public key:</b> <id = "stud_pub_key">{{stud_pub_key}}</id></p>

<button id="verify" type="button" class ="button" onclick="verify()">Verify Certificate</button>
<div id="hash">
</div>
<div id="result">
</div>
<button id = "print" type="button" class ="button"  onclick="print()">Print</button>

<script type="text/javascript" src="/scripts/web3.min.js"></script> 
<script>
   
web3 = new Web3(new Web3.providers.HttpProvider("https://ropsten.infura.io/U9yDj40b2Vl0wwJgnC9V"));
document.getElementById("verify").onclick = function() {verify()};
document.getElementById("print").onclick = function() {print()}; 

function verify() 
{
   var base64 = getBase64Image(document.getElementById("cert_img"));
   console.log("student_pub_key: "+document.getElementById("stud_pub_key"));
   console.log("contract_address: "+document.getElementById("contract_address"));
   var hash = web3.utils.sha3(base64);
   var abi=[
     {
		"constant": false,
		"inputs": [
			{
				"name": "_address", 
				"type": "address"
			},
			{
				"name": "_certHash",
				"type": "string"
			}
		],
		"name": "issueCertificate",
		"outputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"payable": false,
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "student",
				"type": "address"
			}
		],
		"name": "getCerificate",
		"outputs": [
			{
				"name": "",
				"type": "string"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	},
	{
		"constant": true,
		"inputs": [
			{
				"name": "_address",
				"type": "address"
			},
			{
				"name": "_certHash",
				"type": "string"
			}
		],
		"name": "verifyCertificate",
		"outputs": [
			{
				"name": "",
				"type": "bool"
			}
		],
		"payable": false,
		"stateMutability": "view",
		"type": "function"
	}];
    console.log(hash);
   document.getElementById("hash").innerHTML = "Hash :"+hash;
   const myContract = new web3.eth.Contract(abi,document.getElementById("contract_address"));
myContract.methods.verifyCertificate(document.getElementById("stud_pub_key"),hash).call({from:'0x794BE4d9eAA1b865Ad8223E6f2AE928F06b60213'}, function(error, result)
{
       console.log("check 1");
        if(!error)
        {
        	console.log(result);
            if(result)
            {
            	document.getElementById("result").innerHTML = "Result : Pass";
            }
            else
			{
				document.getElementById("result").innerHTML = "Result : Fail";
			}
		} 
		else{
			console.log(error);
		}
});
}
    
function getBase64Image(img)
{
  var canvas = document.createElement("canvas");
  canvas.width = img.width;
  canvas.height = img.height;
  var ctx = canvas.getContext("2d");
  ctx.drawImage(img, 0, 0);
  var dataURL = canvas.toDataURL("image/png");
  return dataURL.replace(/^data:image\/(png|jpg);base64,/, "");
}
function print() 
{
    
}
</script>